commit b99e2f5e28d569e9bc254ada26baa3f0242924ce
Author: Aurelien Gateau <agateau@kde.org>
Date:   Fri Apr 9 11:27:08 2010 +0200

    Ported to KStatusNotifierItem

Index: kdepim-4.4.8/kalarm/kalarmapp.cpp
===================================================================
--- kdepim-4.4.8.orig/kalarm/kalarmapp.cpp	2010-12-04 00:56:58.000000000 +0000
+++ kdepim-4.4.8/kalarm/kalarmapp.cpp	2010-12-06 16:07:20.114221481 +0000
@@ -56,6 +56,7 @@
 #include <netwm.h>
 #include <kdebug.h>
 #include <kshell.h>
+#include <ksystemtrayicon.h>
 
 #include <QObject>
 #include <QTimer>
@@ -769,7 +770,6 @@
 			}
 			mTrayWindow = new TrayWindow(parent ? parent : MainWindow::firstWindow());
 			connect(mTrayWindow, SIGNAL(deleted()), SIGNAL(trayIconToggled()));
-			mTrayWindow->show();
 			emit trayIconToggled();
 
 			if (!checkSystemTray())
Index: kdepim-4.4.8/kalarm/kalarmconfig.kcfg
===================================================================
--- kdepim-4.4.8.orig/kalarm/kalarmconfig.kcfg	2010-12-04 00:56:58.000000000 +0000
+++ kdepim-4.4.8/kalarm/kalarmconfig.kcfg	2010-12-06 16:07:20.138221481 +0000
@@ -47,6 +47,8 @@
   <signal name="feb29TypeChanged">
     <argument type="Enum">DefaultFeb29Type</argument>
   </signal>
+  <signal name="tooltipPreferencesChanged">
+  </signal>
 
   <group name="General">
     <entry name="Version" type="String" hidden="true">
@@ -125,21 +127,25 @@
       </whatsthis>
       <default>5</default>
       <min>-1</min>
+      <emit signal="tooltipPreferencesChanged"/>
     </entry>
     <entry name="ShowTooltipAlarmTime" type="Bool">
       <label context="@label">Show alarm times in system tray tooltip</label>
       <whatsthis context="@info:whatsthis">Specify whether to show in the system tray tooltip, the time at which each alarm is due.</whatsthis>
       <default>true</default>
+      <emit signal="tooltipPreferencesChanged"/>
     </entry>
     <entry name="ShowTooltipTimeToAlarm" type="Bool">
       <label context="@label">Show time to alarms in system tray tooltip</label>
       <whatsthis context="@info:whatsthis">Specify whether to show in the system tray tooltip, how long until each alarm is due.</whatsthis>
       <default>true</default>
+      <emit signal="tooltipPreferencesChanged"/>
     </entry>
     <entry name="TooltipTimeToPrefix" type="String">
       <label context="@label">Time-to-alarm prefix in system tray tooltip</label>
       <whatsthis context="@info:whatsthis">Enter the text to be displayed in front of the time until the alarm, in the system tray tooltip.</whatsthis>
       <default code="true">QLatin1String("+")</default>
+      <emit signal="tooltipPreferencesChanged"/>
     </entry>
     <entry name="EmailClient" key="EmailClient" type="Enum">
       <label context="@label">Email client</label>
Index: kdepim-4.4.8/kalarm/mainwindow.cpp
===================================================================
--- kdepim-4.4.8.orig/kalarm/mainwindow.cpp	2010-12-04 00:56:58.000000000 +0000
+++ kdepim-4.4.8/kalarm/mainwindow.cpp	2010-12-06 16:07:20.142221481 +0000
@@ -60,6 +60,7 @@
 #include <kaction.h>
 #include <kactioncollection.h>
 #include <kinputdialog.h>
+#include <ksystemtrayicon.h>
 
 #include <kstandardaction.h>
 #include <kiconloader.h>
Index: kdepim-4.4.8/kalarm/traywindow.cpp
===================================================================
--- kdepim-4.4.8.orig/kalarm/traywindow.cpp	2010-12-04 00:56:58.000000000 +0000
+++ kdepim-4.4.8/kalarm/traywindow.cpp	2010-12-06 16:08:28.206221481 +0000
@@ -32,6 +32,7 @@
 #include "newalarmaction.h"
 #include "prefdlg.h"
 #include "preferences.h"
+#include "synchtimer.h"
 #include "templatemenuaction.h"
 
 #include <stdlib.h>
@@ -69,30 +70,15 @@
 =============================================================================*/
 
 TrayWindow::TrayWindow(MainWindow* parent)
-	: KSystemTrayIcon(parent),
+	: KStatusNotifierItem(parent),
 	  mAssocMainWindow(parent),
 	  mHaveDisabledAlarms(false)
 {
 	kDebug();
-	// Set up GUI icons
-	mIconEnabled  = loadIcon("kalarm");
-	mIconDisabled = loadIcon("kalarm-disabled");
-	if (mIconEnabled.isNull())
-		KMessageBox::sorry(parent, i18nc("@info", "Cannot load system tray icon."));
-	else
-	{
-		// Create the partially disabled icon, by overlaying the normal icon
-		// with a disabled indication
-		KIconLoader* loader = KIconLoader::global();
-		QImage icon = mIconEnabled.pixmap(loader->currentSize(KIconLoader::Panel)).toImage();
-		QImage disabled = loader->loadIcon("partdisabled", KIconLoader::Panel, icon.width(), KIconLoader::DefaultState, QStringList("emblems")).toImage();
-		KIconEffect::overlay(icon, disabled);
-		mIconSomeDisabled = QIcon(QPixmap::fromImage(icon));
-	}
-#ifdef __GNUC__
-#warning How to implement drag-and-drop?
-#endif
-	//setAcceptDrops(true);         // allow drag-and-drop onto this window
+	setToolTipIconByName("kalarm");
+	setToolTipTitle(KGlobal::mainComponent().aboutData()->programName());
+	setIconByName("kalarm");
+	setStatus(Active);
 
 	// Set up the context menu
 	KActionCollection* actions = actionCollection();
@@ -131,14 +117,40 @@
 	a = KStandardAction::quit(0, 0, actions);
 	connect(a, SIGNAL(triggered(bool)), SLOT(slotQuit()), Qt::QueuedConnection);
 
-	// Set icon to correspond with the alarms enabled menu status
-	setEnabledStatus(theApp()->alarmsEnabled());
-
 	connect(AlarmResources::instance(), SIGNAL(resourceStatusChanged(AlarmResource*, AlarmResources::Change)), SLOT(slotResourceStatusChanged()));
 	connect(AlarmCalendar::resources(), SIGNAL(haveDisabledAlarmsChanged(bool)), SLOT(slotHaveDisabledAlarms(bool)));
-	connect(this, SIGNAL(activated(QSystemTrayIcon::ActivationReason)), SLOT(slotActivated(QSystemTrayIcon::ActivationReason)));
+	connect(this, SIGNAL(activateRequested(bool, const QPoint&)), SLOT(slotActivateRequested()));
+	connect(this, SIGNAL(secondaryActivateRequested(const QPoint&)), SLOT(slotSecondaryActivateRequested()));
 	slotResourceStatusChanged();   // initialise action states
 	slotHaveDisabledAlarms(AlarmCalendar::resources()->haveDisabledAlarms());
+
+	// Hack: KSNI does not let us know when it is about to show the tooltip,
+	// so we need to update it whenever something change in it.
+
+	// This timer ensure updateToolTip() is not called several times in a row
+	mToolTipUpdateTimer = new QTimer(this);
+	mToolTipUpdateTimer->setInterval(0);
+	mToolTipUpdateTimer->setSingleShot(true);
+	connect(mToolTipUpdateTimer, SIGNAL(timeout()), SLOT(updateToolTip()));
+
+	// Update every minute to show accurate deadlines
+	MinuteTimer::connect(mToolTipUpdateTimer, SLOT(start()));
+
+	// Update when alarms are modified
+	connect(EventListModel::alarms(), SIGNAL(dataChanged(const QModelIndex&, const QModelIndex&)),
+		mToolTipUpdateTimer, SLOT(start()));
+	connect(EventListModel::alarms(), SIGNAL(rowsInserted(const QModelIndex&, int, int)),
+		mToolTipUpdateTimer, SLOT(start()));
+	connect(EventListModel::alarms(), SIGNAL(rowsMoved(const QModelIndex&, int, int, const QModelIndex&, int)),
+		mToolTipUpdateTimer, SLOT(start()));
+	connect(EventListModel::alarms(), SIGNAL(rowsRemoved(const QModelIndex&, int, int)),
+		mToolTipUpdateTimer, SLOT(start()));
+	connect(EventListModel::alarms(), SIGNAL(modelReset()),
+		mToolTipUpdateTimer, SLOT(start()));
+
+	// Update when tooltip preferences are modified
+	Preferences::connect(SIGNAL(tooltipPreferencesChanged()),
+		mToolTipUpdateTimer, SLOT(start()));
 }
 
 TrayWindow::~TrayWindow()
@@ -192,7 +204,8 @@
 */
 void TrayWindow::slotQuit()
 {
-	theApp()->doQuit(parentWidget());
+	// FIXME: Do we really need a slotQuit()?
+	theApp()->doQuit(static_cast<QWidget*>(parent()));
 }
 
 /******************************************************************************
@@ -202,7 +215,8 @@
 void TrayWindow::setEnabledStatus(bool status)
 {
 	kDebug() << (int)status;
-	setIcon(status ? (mHaveDisabledAlarms ? mIconSomeDisabled : mIconEnabled) : mIconDisabled);
+	updateIcon();
+	updateToolTip();
 }
 
 /******************************************************************************
@@ -213,75 +227,74 @@
 {
 	kDebug() << haveDisabled;
 	mHaveDisabledAlarms = haveDisabled;
-	if (mActionEnabled->isChecked())
-		setIcon(haveDisabled ? mIconSomeDisabled : mIconEnabled);
+	updateIcon();
+	updateToolTip();
 }
 
 /******************************************************************************
-*  Called when the mouse is clicked over the panel icon.
 *  A left click displays the KAlarm main window.
-*  A middle button click displays the New Alarm window.
 */
-void TrayWindow::slotActivated(QSystemTrayIcon::ActivationReason reason)
+void TrayWindow::slotActivateRequested()
 {
-	if (reason == QSystemTrayIcon::Trigger)
-	{
-		// Left click: display/hide the first main window
-		if (mAssocMainWindow  &&  mAssocMainWindow->isVisible())
-		{
-			mAssocMainWindow->raise();
-			mAssocMainWindow->activateWindow();
-		}
-	}
-	else if (reason == QSystemTrayIcon::MiddleClick)
+	// Left click: display/hide the first main window
+	if (mAssocMainWindow  &&  mAssocMainWindow->isVisible())
 	{
-		if (mActionNew->isEnabled())
-			mActionNew->trigger();    // display a New Alarm dialog
+		mAssocMainWindow->raise();
+		mAssocMainWindow->activateWindow();
 	}
 }
 
 /******************************************************************************
-*  Called when the drag cursor enters the panel icon.
+*  A middle button click displays the New Alarm window.
 */
-void TrayWindow::dragEnterEvent(QDragEnterEvent* e)
+void TrayWindow::slotSecondaryActivateRequested()
 {
-	MainWindow::executeDragEnterEvent(e);
+	if (mActionNew->isEnabled())
+		mActionNew->trigger();    // display a New Alarm dialog
 }
 
 /******************************************************************************
-*  Called when an object is dropped on the panel icon.
-*  If the object is recognised, the edit alarm dialog is opened appropriately.
+*  Adjust tooltip according to the app state.
+*  The tooltip text shows alarms due in the next 24 hours. The limit of 24
+*  hours is because only times, not dates, are displayed.
 */
-void TrayWindow::dropEvent(QDropEvent* e)
+void TrayWindow::updateToolTip()
 {
-	MainWindow::executeDropEvent(0, e);
+	bool enabled = theApp()->alarmsEnabled();
+	QString subTitle;
+	if (enabled  &&  Preferences::tooltipAlarmCount())
+		subTitle = tooltipAlarmText();
+	if (!enabled) {
+		//text = i18nc("@info:tooltip 'KAlarm - disabled'", "%1 - disabled", KGlobal::mainComponent().aboutData()->programName());
+		subTitle = i18n("Disabled");
+	} else if (mHaveDisabledAlarms) {
+		if (!subTitle.isEmpty()) {
+			subTitle += "<br/>";
+		}
+		#if 0
+		subTitle += i18nc("@info:tooltip Brief: some alarms are disabled", "(Some alarms disabled)");
+		#else
+		// FIXME: Hack to avoid introducing new strings
+		QString text = i18nc("@info:tooltip Brief: some alarms are disabled", "%1<nl/>(Some alarms disabled)%2", QString(), QString());
+		// i18n() turns "<nl/>" into "<br/>"
+		text = text.mid(text.indexOf("<br/>") + 5);
+		subTitle += text;
+		#endif
+	}
+	kDebug() << subTitle;
+	setToolTipSubTitle(subTitle);
 }
 
 /******************************************************************************
-*  Called when any event occurs.
-*  If it's a tooltip event, display the tooltip text showing alarms due in the
-*  next 24 hours. The limit of 24 hours is because only times, not dates, are
-*  displayed.
+*  Adjust icon according to the app state.
 */
-bool TrayWindow::event(QEvent* e)
+void TrayWindow::updateIcon()
 {
-	if (e->type() != QEvent::ToolTip)
-		return KSystemTrayIcon::event(e);
-	QHelpEvent* he = (QHelpEvent*)e;
-	bool enabled = theApp()->alarmsEnabled();
-	QString altext;
-	if (enabled  &&  Preferences::tooltipAlarmCount())
-		altext = tooltipAlarmText();
-	QString text;
-	if (!enabled)
-		text = i18nc("@info:tooltip 'KAlarm - disabled'", "%1 - disabled", KGlobal::mainComponent().aboutData()->programName());
-	else if (mHaveDisabledAlarms)
-		text = i18nc("@info:tooltip Brief: some alarms are disabled", "%1<nl/>(Some alarms disabled)%2", KGlobal::mainComponent().aboutData()->programName(), altext);
-	else
-		text = i18nc("@info:tooltip", "%1%2", KGlobal::mainComponent().aboutData()->programName(), altext);
-	kDebug() << text;
-	QToolTip::showText(he->globalPos(), text);
-	return true;
+	if (theApp()->alarmsEnabled()) {
+		setOverlayIconByName(mHaveDisabledAlarms ? "partdisabled" : QString());
+	} else {
+		setOverlayIconByName("disabled");
+	}
 }
 
 /******************************************************************************
@@ -349,7 +362,9 @@
 	for (i = 0, iend = items.count();  i < iend;  ++i)
 	{
 		kDebug() << "--" << (count+1) << ")" << items[i].text;
-		text += "<br />" + items[i].text;
+		if (i > 0)
+			text += "<br />";
+		text += items[i].text;
 		if (++count == maxCount)
 			break;
 	}
Index: kdepim-4.4.8/kalarm/traywindow.h
===================================================================
--- kdepim-4.4.8.orig/kalarm/traywindow.h	2010-12-04 00:56:58.000000000 +0000
+++ kdepim-4.4.8/kalarm/traywindow.h	2010-12-06 16:07:20.166221481 +0000
@@ -23,7 +23,7 @@
 
 #include "editdlg.h"
 #include "kaevent.h"
-#include <ksystemtrayicon.h>
+#include <kstatusnotifieritem.h>
 #include <QIcon>
 
 class QEvent;
@@ -36,7 +36,7 @@
 class NewAlarmAction;
 class TemplateMenuAction;
 
-class TrayWindow : public KSystemTrayIcon
+class TrayWindow : public KStatusNotifierItem
 {
 		Q_OBJECT
 	public:
@@ -49,13 +49,9 @@
 	signals:
 		void         deleted();
 
-	protected:
-		virtual void dragEnterEvent(QDragEnterEvent*);
-		virtual void dropEvent(QDropEvent*);
-		virtual bool event(QEvent*);
-
 	private slots:
-		void         slotActivated(QSystemTrayIcon::ActivationReason reason);
+		void         slotActivateRequested();
+		void         slotSecondaryActivateRequested();
 		void         slotNewAlarm(EditAlarmDlg::Type);
 		void         slotNewFromTemplate(const KAEvent*);
 		void         slotPreferences();
@@ -63,18 +59,18 @@
 		void         slotHaveDisabledAlarms(bool disabled);
 		void         slotResourceStatusChanged();
 		void         slotQuit();
+		void         updateToolTip();
 
 	private:
 		QString      tooltipAlarmText() const;
+		void         updateIcon();
 
 		MainWindow*     mAssocMainWindow;     // main window associated with this, or null
-		QIcon           mIconEnabled;         // normal status icon
-		QIcon           mIconDisabled;        // icon indicating all alarms disabled
-		QIcon           mIconSomeDisabled;    // icon indicating individual alarms disabled
 		KToggleAction*  mActionEnabled;
 		NewAlarmAction* mActionNew;
 		TemplateMenuAction* mActionNewFromTemplate;
 		bool            mHaveDisabledAlarms;  // some individually disabled alarms exist
+		QTimer*         mToolTipUpdateTimer;
 };
 
 #endif // TRAYWINDOW_H
